basePath: /v1
definitions:
  models.Category:
    properties:
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  models.Comment:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      post_id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.CreateCategoryRequest:
    properties:
      title:
        type: string
    type: object
  models.CreateCommentRequest:
    properties:
      description:
        type: string
      post_id:
        type: integer
      user_id:
        type: integer
    type: object
  models.CreatePostRequest:
    properties:
      category_id:
        type: integer
      description:
        type: string
      image_url:
        type: string
      title:
        type: string
      user_id:
        type: integer
    type: object
  models.CreateUserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      profile_image_url:
        type: string
      type:
        type: string
      username:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.GetCategoriesResult:
    properties:
      categories:
        items:
          $ref: '#/definitions/models.Category'
        type: array
      count:
        type: integer
    type: object
  models.GetCommentsResult:
    properties:
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      count:
        type: integer
    type: object
  models.GetPostsResult:
    properties:
      count:
        type: integer
      posts:
        items:
          $ref: '#/definitions/models.Post'
        type: array
    type: object
  models.GetUsersResult:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.OKResponse:
    properties:
      success:
        type: string
    type: object
  models.Post:
    properties:
      category_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      views_count:
        type: integer
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      last_name:
        type: string
      phone_number:
        type: string
      profile_image_url:
        type: string
      type:
        type: string
      username:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is a blog service api.
  title: Swagger for blog api
  version: "1.0"
paths:
  /categories:
    get:
      consumes:
      - application/json
      description: Get categories
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Page
        in: query
        name: page
        required: true
        type: integer
      - description: Title
        in: query
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCategoriesResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get categories
      tags:
      - category
    post:
      consumes:
      - application/json
      description: Create a category
      parameters:
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Category'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a category
      tags:
      - category
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a category
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OKResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a category
      tags:
      - category
    get:
      consumes:
      - application/json
      description: Get a category by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a category by id
      tags:
      - category
    put:
      consumes:
      - application/json
      description: Update a category
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OKResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a category
      tags:
      - category
  /comments:
    get:
      consumes:
      - application/json
      description: Get comments
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Page
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCommentsResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get comments
      tags:
      - comment
    post:
      consumes:
      - application/json
      description: Create a comment
      parameters:
      - description: Comment
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.CreateCommentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Comment'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a comment
      tags:
      - comment
  /comments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a comment
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OKResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a comment
      tags:
      - comment
    get:
      consumes:
      - application/json
      description: Get a comment by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comment'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a comment by id
      tags:
      - comment
    put:
      consumes:
      - application/json
      description: Update a comment
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Comment
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.CreateCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OKResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a comment
      tags:
      - comment
  /posts:
    get:
      consumes:
      - application/json
      description: Get posts
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Page
        in: query
        name: page
        required: true
        type: integer
      - description: Title
        in: query
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetPostsResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get posts
      tags:
      - post
    post:
      consumes:
      - application/json
      description: Create a post
      parameters:
      - description: Post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.CreatePostRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Post'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a post
      tags:
      - post
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a post
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OKResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a post
      tags:
      - post
    get:
      consumes:
      - application/json
      description: Get a post by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a post by id
      tags:
      - post
    put:
      consumes:
      - application/json
      description: Update a post
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.CreatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OKResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a post
      tags:
      - post
  /users:
    get:
      consumes:
      - application/json
      description: Get users
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Page
        in: query
        name: page
        required: true
        type: integer
      - description: Search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUsersResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a user
      tags:
      - user
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OKResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get a user by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a user by id
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OKResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a user
      tags:
      - user
swagger: "2.0"
